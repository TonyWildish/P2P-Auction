z <- dcast(d, price ~ quantity, value.var="allocation")
   price 0 5 10 15 20 25 30 35 40 45 50 55 60 65 70 75 80 85 90 95
1      0 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
2      1 0 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
3      2 0 5 10 15 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20
4      3 0 5 10 15 20 25 30 30 30 30 30 30 30 30 30 30 30 30 30 30
5      4 0 5 10 15 20 25 30 30 30 30 30 30 30 30 30 30 30 30 30 30
6      5 0 5 10 15 20 25 30 35 40 45 50 50 50 50 50 50 50 50 50 50
7      6 0 5 10 15 20 25 30 35 40 45 50 50 50 50 50 50 50 50 50 50
8      7 0 5 10 15 20 25 30 35 40 45 50 55 60 65 70 75 80 80 80 80
9      8 0 5 10 15 20 25 30 35 40 45 50 55 60 65 70 75 80 85 90 95
10     9 0 5 10 15 20 25 30 35 40 45 50 55 60 65 70 75 80 85 90 95
11    10 0 5 10 15 20 25 30 35 40 45 50 55 60 65 70 75 80 85 90 95
12    11 0 5 10 15 20 25 30 35 40 45 50 55 60 65 70 75 80 85 90 95
13    12 0 5 10 15 20 25 30 35 40 45 50 55 60 65 70 75 80 85 90 95
14    13 0 5 10 15 20 25 30 35 40 45 50 55 60 65 70 75 80 85 90 95
15    14 0 5 10 15 20 25 30 35 40 45 50 55 60 65 70 75 80 85 90 95

z <- dcast(d, price ~ quantity, value.var="cost")
   price 0 5 10 15 20 25 30 35 40  45  50  55  60  65  70  75  80  85  90  95
1      0 0 0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0
2      1 0 0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0
3      2 0 5 10 15 20 20 20 20 20  20  20  20  20  20  20  20  20  20  20  20
4      3 0 5 10 15 20 30 40 40 40  40  40  40  40  40  40  40  40  40  40  40
5      4 0 5 10 15 20 30 40 40 40  40  40  40  40  40  40  40  40  40  40  40
6      5 0 5 10 15 20 30 40 60 80 100 120 120 120 120 120 120 120 120 120 120
7      6 0 5 10 15 20 30 40 60 80 100 120 120 120 120 120 120 120 120 120 120
8      7 0 5 10 15 20 30 40 60 80 100 120 150 180 210 240 270 300 300 300 300
9      8 0 5 10 15 20 30 40 60 80 100 120 150 180 210 240 270 300 335 370 405
10     9 0 5 10 15 20 30 40 60 80 100 120 150 180 210 240 270 300 335 370 405
11    10 0 5 10 15 20 30 40 60 80 100 120 150 180 210 240 270 300 335 370 405
12    11 0 5 10 15 20 30 40 60 80 100 120 150 180 210 240 270 300 335 370 405
13    12 0 5 10 15 20 30 40 60 80 100 120 150 180 210 240 270 300 335 370 405
14    13 0 5 10 15 20 30 40 60 80 100 120 150 180 210 240 270 300 335 370 405
15    14 0 5 10 15 20 30 40 60 80 100 120 150 180 210 240 270 300 335 370 405

R> dcast(d, price ~ quantity, value.var="utility")
   price 0  5 10  15  20  25  30  35  40  45  50  55  60  65  70  75  80  85  90  95
1      0 0  0  0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
2      1 0  0  0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
3      2 0 45 90 135 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180
4      3 0 45 90 135 180 220 260 260 260 260 260 260 260 260 260 260 260 260 260 260
5      4 0 45 90 135 180 220 260 260 260 260 260 260 260 260 260 260 260 260 260 260
6      5 0 45 90 135 180 220 260 290 320 350 380 380 380 380 380 380 380 380 380 380
7      6 0 45 90 135 180 220 260 290 320 350 380 380 380 380 380 380 380 380 380 380
8      7 0 45 90 135 180 220 260 290 320 350 380 400 420 440 460 480 500 500 500 500
9      8 0 45 90 135 180 220 260 290 320 350 380 400 420 440 460 480 500 515 530 545
10     9 0 45 90 135 180 220 260 290 320 350 380 400 420 440 460 480 500 515 530 545
11    10 0 45 90 135 180 220 260 290 320 350 380 400 420 440 460 480 500 515 530 545
12    11 0 45 90 135 180 220 260 290 320 350 380 400 420 440 460 480 500 515 530 545
13    12 0 45 90 135 180 220 260 290 320 350 380 400 420 440 460 480 500 515 530 545
14    13 0 45 90 135 180 220 260 290 320 350 380 400 420 440 460 480 500 515 530 545
15    14 0 45 90 135 180 220 260 290 320 350 380 400 420 440 460 480 500 515 530 545


input:
    player1 => [ 100, 1, 'player1'],
    player2 => [  10, 2, 'player2'],
    player3 => [  20, 4, 'player3'],
    player5 => [  20, 7, 'player5'],
    player6 => [  30, 12, 'player6'],

should see max utility along price=10
player4:
p=1 -> allocation =        0
p=2 -> allocation = min(q,20)
   for q < 20, cost = q
  21 < q < 30, cost = 20+2*(q-20) = 2q-20
  31 < q < 99, cost = 40

p=3,4 -> allocation = min(q,30)
   for q < 20, cost = q
  21 < q < 30, cost = 2(q-10)
  31 < q < 99, cost = 40

p=5,6,7 -> allocation = min(q,30)
       q < 20, cost = q
  21 < q < 30, cost = 2(q-10)
  31 < q < 50, cost = 4(q-20)
  51 < q < 99, cost = 20*4+10*2+20 = 120

p=8,9,10,11 -> allocation = min(q,70)
       q < 20, cost = q
  21 < q < 30, cost = 2(q-10)
  31 < q < 50, cost = 4(q-20)
  51 < q < 70, cost = 120+7*(q-50) = 7q-230
  71 < q < 99, cost = 260

p>= 12 -> allocation = q
       q < 20, cost = q
  21 < q < 30, cost = 2(q-10)
  31 < q < 50, cost = 4(q-20)
  51 < q < 70, cost = 7q-230
  71 < q < 99, cost = 260 + 12(q-70) = 12q-580

      player1 => [ 100, 1, 'player1'],
    player2 => [  10, 2, 'player2'],
    player3 => [  20, 4, 'player3'],
    player5 => [  20, 7, 'player5'],
    player6 => [  30, 12, 'player6'],

